Module RhetosJobs
{
	Entity TheEntity
	{
		Logging { AllProperties; }	
		
		ShortString Code { Autocode; DefaultValue 'item => "+"';}
		LongString Description;
	}
	
	Action Happy '(parameters, repository, userInfo) => 
	{
		var id = Guid.NewGuid();
		var action = new RhetosJobs.TheJob{ Description = $"TheJob started from Happy action {id}." };
		repository.RhetosJobs.TheEntity.Insert(new RhetosJobs.TheEntity { Description = action.Description });
		Rhetos.Jobs.BackgroundJobExtensions.EnqueueAction(backgroundJob, action, true, true);
		Rhetos.Jobs.BackgroundJobExtensions.EnqueueAction(backgroundJob, action, false, true);
		Rhetos.Jobs.BackgroundJobExtensions.EnqueueAction(backgroundJob, action, false, true);
		Rhetos.Jobs.BackgroundJobExtensions.EnqueueAction(backgroundJob, action, false, true);
		Rhetos.Jobs.BackgroundJobExtensions.EnqueueAction(backgroundJob, action, false, true);
		Rhetos.Jobs.BackgroundJobExtensions.EnqueueAction(backgroundJob, action, false, true);
	}'
	{
		RepositoryUses 'backgroundJob' 'Rhetos.Jobs.IBackgroundJob, Rhetos.Jobs.Abstractions';
	}
	
	Action HappyWithWait '(parameters, repository, userInfo) => 
	{
		var id = Guid.NewGuid();
		var action = new RhetosJobs.TheJob{ Description = $"TheJob started from HappyWithWait action {id}." };
		repository.RhetosJobs.TheEntity.Insert(new RhetosJobs.TheEntity { Description = action.Description });
		Rhetos.Jobs.BackgroundJobExtensions.EnqueueAction(backgroundJob, action, false, true);
		//System.Threading.Thread.Sleep(20000);
		// throw new Rhetos.UserException("Ne može");
	}'
	{
		RepositoryUses 'backgroundJob' 'Rhetos.Jobs.IBackgroundJob, Rhetos.Jobs.Abstractions';
	}

	Action TheJob '(parameters, repository, userInfo) => 
	{
		repository.RhetosJobs.ExecutedJob.Insert(new RhetosJobs.ExecutedJob { Description = parameters.Description});
		repository.RhetosJobs.TheEntity.Insert(new RhetosJobs.TheEntity { Description = parameters.Description });
	}'
	{
		LongString Description;
	}
	
	Entity ExecutedJob
	{
		Logging { AllProperties; }	

		LongString Description;
	}
}