Module TestRhetosJobs
{
	Action SimpleAction '(parameter, repository, userInfo) =>
		_domRepository.Common.AddToLog.Execute(new Common.AddToLog { Action = "TestRhetosJobs.SimpleAction", Description = parameter.Data })'
	{
		ShortString Data;
	}

	Action SimpleAction2 '(parameter, repository, userInfo) =>
		_domRepository.Common.AddToLog.Execute(new Common.AddToLog { Action = "TestRhetosJobs.SimpleAction2", Description = parameter.Data })'
	{
		ShortString Data;
	}

	Action RetryingAction '(parameter, repository, userInfo) =>
		{
			int previousEntriesCount = _domRepository.Common.LogReader.Query(l => l.TableName == null && l.Action == "TestRhetosJobs.RetryingAction" && l.Description == parameter.Data).Count();

			// Insert the log entry in a separate scope, so that it remains in database even if job execution fails.
			var container = (Autofac.IContainer)Autofac.Integration.Wcf.AutofacServiceHostFactory.Container;
			using (var scope = new Rhetos.TransactionScopeContainer(container))
			{
				var scopeRepository = scope.Resolve<Common.DomRepository>();
				scopeRepository.Common.AddToLog.Execute(new Common.AddToLog { Action = "TestRhetosJobs.RetryingAction", Description = parameter.Data });
				scope.CommitChanges();
			}

			if (previousEntriesCount == 0)
				throw new Rhetos.UserException($"First execution fails. Data={parameter.Data}");
		}'
	{
		ShortString Data;
	}
}